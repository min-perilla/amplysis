% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/amplysis.R
\name{amplysis}
\alias{amplysis}
\title{R6 Class: amplysis}
\value{
R6 Class: otu, tax, rep, tree, env, metadata, data, chart
}
\description{
The R6 class \code{amplysis} encapsulates data preprocessing and data
analysis-related functions into a single class. This encapsulation simplifies
data management and preprocessing tasks during the analysis process. By using
the \code{amplysis} class, researchers can perform data input, modification,
preprocessing, and analysis operations through a unified interface, thereby
enhancing work efficiency.
}
\examples{

## ------------------------------------------------
## Method `amplysis$new`
## ------------------------------------------------

\dontrun{amplysis$new(otu, tax, rep_seq, tree, env, metadata)}


## ------------------------------------------------
## Method `amplysis$print`
## ------------------------------------------------

\dontrun{
a <- amplysis$new(otu, metadata)
print(a)}


## ------------------------------------------------
## Method `amplysis$tax_separate`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_separate(index = 2)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_separate(index = 2, delim = ";", names = c("domain", "phylum",
"class", "order", "family", "genus", "species"))}


## ------------------------------------------------
## Method `amplysis$tax_trim_prefix`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_trim_prefix(index = c(2:8), position = 3)}


## ------------------------------------------------
## Method `amplysis$tax_names_repair`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = 7, column_to_add = 3)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c(4:8), column_to_add = 3)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = "genus", column_to_add = "phylum")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c("genus", "species"), column_to_add = "phylum")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c("genus", "species"), column_to_add = 3)}


## ------------------------------------------------
## Method `amplysis$align_otu_tax`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$align_otu_tax(by.x = 1, by.y = 1, all.x = F, all.y = T, sort = F)}


## ------------------------------------------------
## Method `amplysis$data_rarefy`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy()}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 0, method = "vegan")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 0, method = "phyloseq", seed = 1231)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 1, method = "phyloseq", trimOTUs = T,
tax_table = tax, write_file = T)}


## ------------------------------------------------
## Method `amplysis$alpha`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$alpha(id_col = 1, group = "group", parallel_method = "mean",
tree = tree, method = 1)
}


## ------------------------------------------------
## Method `amplysis$alpha_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$alpha(id_col = 1, group = "group", parallel_method = "mean", tree = tree, method = 1)
a$alpha_plot(data,
color_scheme = c('#aaf200','#0082ff',"#d23aa4","#c777ff", "#79ff79"),
custom_order = c("A", "B", "R", "D", "S"))
}


## ------------------------------------------------
## Method `amplysis$RDA`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$RDA(1, "group")
}


## ------------------------------------------------
## Method `amplysis$RDA_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$RDA(1, "group")
a$RDA_plot(group = "group", custom_order = NULL,
           color_scheme = c("#00b0f6", "#FFC24B", "#f8766d"), seed = 123,

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "RDA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 16, size_y = 16, size_legned = 16,

           filename = "RDA", file_width = 16, file_height = 9)
}


## ------------------------------------------------
## Method `amplysis$CCA`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$CCA(metadata, 1, "group")
}


## ------------------------------------------------
## Method `amplysis$CCA_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$CCA(id_col = 1, group = "group")
a$CCA_plot(group = "group", custom_order = NULL,
           color_scheme = c("#00b0f6", "#FFC24B", "#f8766d"), seed = 123,

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "CCA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 16, size_y = 16, size_legned = 16,

           filename = "CCA", file_width = 16, file_height = 9)
}


## ------------------------------------------------
## Method `amplysis$chord`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$chord(id_col = 1, tax_cla = "genus", group = "group",
parallel_method = "mean", row_n = 8, digits = 0)}


## ------------------------------------------------
## Method `amplysis$chord_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$chord(id_col = 1, tax_cla = "genus", group = "group",
parallel_method = "mean", row_n = 8, digits = 0)
a$chord_plot(color_scheme = c("#27e6ff", "#42ff0e", "#33BEB7", "#F66320",
"#FBA127", "#A463D7", "#DB3937", "#ffaec8", "#828282"))
}


## ------------------------------------------------
## Method `amplysis$heat_map`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$heat_map(id_col = 1, group = "group", group2 = NULL, tax_cla = "genus",
parallel_method = "mean", row_n = 50)}


## ------------------------------------------------
## Method `amplysis$heat_map_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$heat_map(id_col = 1, group = "group", group2 = NULL, tax_cla = "genus",
parallel_method = "mean", row_n = 50)
a$heat_map_plot(scale = "row", cellwidth = NA, cellheight = NA,
color =  c("#2196f3", "#a8d1f2", "#f4faff", "#ec9fa2", "#ec1c24"),
cluster_cols = F, clustering_method = "ward.D", treeheight_row = 100,
treeheight_col = 50, filename = "heatmap.png")}


## ------------------------------------------------
## Method `amplysis$pca`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pca(1, metadata)
}


## ------------------------------------------------
## Method `amplysis$pca_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pca(1, metadata)
a$pca_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
           seed = 123, custom_order = c("A", "B", "R", "D", "S"),

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "PCA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 18, size_y = 18, size_legned = 16, filename = "PCA",
           file_width = 12, file_height = 9)
}



## ------------------------------------------------
## Method `amplysis$pcoa`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pcoa(1, metadata)
}


## ------------------------------------------------
## Method `amplysis$pcoa_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pcoa(id_col = 1, group = "group2")
a$pcoa_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
            seed = 123, custom_order = c("A", "B", "R", "D", "S"),

            size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
            spacing_legend_title = 0.5, legend_ncol = 1,

            title = "PCoA", title_legend = "Group",

            size_title = 28, size_title_x = 20, size_title_y = 20,
            size_title_legned = 24,

            size_x = 18, size_y = 18, size_legned = 16, filename = "PCoA",
            file_width = 12, file_height = 9)
}


## ------------------------------------------------
## Method `amplysis$nmds`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$nmds(1, "group2")
}


## ------------------------------------------------
## Method `amplysis$nmds_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$nmds(1, "group2")
a$nmds_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
            seed = 123, custom_order = c("A", "B", "R", "D", "S"),

            size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
            spacing_legend_title = 0.5, legend_ncol = 1,

            title = "NMDS", title_legend = "Group",

            size_title = 28, size_title_x = 20, size_title_y = 20,
            size_title_legned = 24,

            size_x = 18, size_y = 18, size_legned = 16, filename = "NMDS",
            file_width = 12, file_height = 9)
            }


## ------------------------------------------------
## Method `amplysis$venn`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$venn(1, "group", "mean")
}


## ------------------------------------------------
## Method `amplysis$venn_plot`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$venn(1, "group", "mean")
a$venn_plot(color_scheme = c('#aaf200','#0082ff',"#d23aa4","#c777ff", "#79ff79"))
}


## ------------------------------------------------
## Method `amplysis$Upset`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$Upset(1, "group", "mean")
}


## ------------------------------------------------
## Method `amplysis$Upset_plot`
## ------------------------------------------------

\dontrun{
upset1 <- Upset(otu, metadata, 1, "group", "mean")
Upset_plot(upset1,
           queries = list(
             list(query = intersects,
                  params = list("AA", "AB", "AD"), color="#f06676", active = T),
             list(query = intersects,
                  params = list("AA", "AB"), color="#f06676", active = T)))
}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$Upset(1, "group", "mean")
a$Upset_plot(
  color_matrix = NULL, n = 40, custom_order = NULL, order_by = "freq",
  mb.ratio = c(0.6, 0.4),
  size_point = 2, color_point = "#505050", color_matrix_shade = "#f89c9f",
  color_bar = '#505050',
  title_matrix_x = "Set Size", title_bar_y = "Intersection Size",
  size_title_matrix_x = 2, size_title_matrix_y = 1.7, size_title_bar_y = 2,
  size_matrix_x = 2, size_bar_y = 2, size_bar_label = 1.75)
}


## ------------------------------------------------
## Method `amplysis$network`
## ------------------------------------------------

\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network()}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network(id_col = 1, .r = 0.6, .p = 0.05)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network(id_col = 1, tax_cla = "genus", label = "phylum",
          group = "group", parallel_method = "mean", calc_method = "spearman",
          cluster_method = 1, normalize_flag = TRUE, .r = 0.6, .p = 0.05)}

}
\section{Super classes}{
\code{\link[amplysis:otu_metadata_data_chart]{amplysis::otu_metadata_data_chart}} -> \code{\link[amplysis:otu_tax_metadata_data_chart]{amplysis::otu_tax_metadata_data_chart}} -> \code{\link[amplysis:otu_tax_rep_metadata_data_chart]{amplysis::otu_tax_rep_metadata_data_chart}} -> \code{\link[amplysis:otu_tax_rep_tree_metadata_data_chart]{amplysis::otu_tax_rep_tree_metadata_data_chart}} -> \code{\link[amplysis:otu_tax_rep_tree_env_metadata_data_chart]{amplysis::otu_tax_rep_tree_env_metadata_data_chart}} -> \code{amplysis}
}
\section{Active bindings}{
\if{html}{\out{<div class="r6-active-bindings">}}
\describe{
\item{\code{otu}}{Get or set \code{OTU/ASV} table}

\item{\code{tax}}{Get or set \code{tax} table}

\item{\code{rep_seq}}{Get or set \code{rep_seq}}

\item{\code{tree}}{Get or set \verb{phylogenetic tree} file}

\item{\code{metadata}}{Get or set \code{metadata} table}

\item{\code{data}}{Get \code{data}}

\item{\code{chart}}{Get \code{chart}}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-amplysis-new}{\code{amplysis$new()}}
\item \href{#method-amplysis-print}{\code{amplysis$print()}}
\item \href{#method-amplysis-tax_separate}{\code{amplysis$tax_separate()}}
\item \href{#method-amplysis-tax_trim_prefix}{\code{amplysis$tax_trim_prefix()}}
\item \href{#method-amplysis-tax_names_repair}{\code{amplysis$tax_names_repair()}}
\item \href{#method-amplysis-align_otu_tax}{\code{amplysis$align_otu_tax()}}
\item \href{#method-amplysis-data_rarefy}{\code{amplysis$data_rarefy()}}
\item \href{#method-amplysis-alpha}{\code{amplysis$alpha()}}
\item \href{#method-amplysis-alpha_plot}{\code{amplysis$alpha_plot()}}
\item \href{#method-amplysis-RDA}{\code{amplysis$RDA()}}
\item \href{#method-amplysis-RDA_plot}{\code{amplysis$RDA_plot()}}
\item \href{#method-amplysis-CCA}{\code{amplysis$CCA()}}
\item \href{#method-amplysis-CCA_plot}{\code{amplysis$CCA_plot()}}
\item \href{#method-amplysis-chord}{\code{amplysis$chord()}}
\item \href{#method-amplysis-chord_plot}{\code{amplysis$chord_plot()}}
\item \href{#method-amplysis-heat_map}{\code{amplysis$heat_map()}}
\item \href{#method-amplysis-heat_map_plot}{\code{amplysis$heat_map_plot()}}
\item \href{#method-amplysis-pca}{\code{amplysis$pca()}}
\item \href{#method-amplysis-pca_plot}{\code{amplysis$pca_plot()}}
\item \href{#method-amplysis-pcoa}{\code{amplysis$pcoa()}}
\item \href{#method-amplysis-pcoa_plot}{\code{amplysis$pcoa_plot()}}
\item \href{#method-amplysis-nmds}{\code{amplysis$nmds()}}
\item \href{#method-amplysis-nmds_plot}{\code{amplysis$nmds_plot()}}
\item \href{#method-amplysis-venn}{\code{amplysis$venn()}}
\item \href{#method-amplysis-venn_plot}{\code{amplysis$venn_plot()}}
\item \href{#method-amplysis-Upset}{\code{amplysis$Upset()}}
\item \href{#method-amplysis-Upset_plot}{\code{amplysis$Upset_plot()}}
\item \href{#method-amplysis-network}{\code{amplysis$network()}}
\item \href{#method-amplysis-clone}{\code{amplysis$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-new"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-new}{}}}
\subsection{Method \code{new()}}{
initialization function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$new(
  otu = NULL,
  tax = NULL,
  rep_seq = NULL,
  tree = NULL,
  env = NULL,
  metadata = NULL
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{otu}}{otu table}

\item{\code{tax}}{tax table}

\item{\code{rep_seq}}{representative sequence}

\item{\code{tree}}{phylogenetic tree file}

\item{\code{env}}{environmental factor}

\item{\code{metadata}}{metadata table}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
R6 class
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{amplysis$new(otu, tax, rep_seq, tree, env, metadata)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-print"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-print}{}}}
\subsection{Method \code{print()}}{
verride the print function.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$print(...)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{...}}{}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
gg, ggplot2, chart
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a <- amplysis$new(otu, metadata)
print(a)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-tax_separate"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-tax_separate}{}}}
\subsection{Method \code{tax_separate()}}{
Call the \code{separate_wider_delim()} function from the tidyr package to
separate the data in the taxonomy column of the data table.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$tax_separate(index, delim, names)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{(integer) The column number of the taxonomy column in the data table.}

\item{\code{delim}}{(character) The delimiter. Default is ";".}

\item{\code{names}}{(character) Names for each column after data separation.
Ensure the number of names matches the number of columns after separation,
such as 'names = c("domain", "phylum", "class", "order", "family", "genus", "species")'.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_separate(index = 2)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_separate(index = 2, delim = ";", names = c("domain", "phylum",
"class", "order", "family", "genus", "species"))}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-tax_trim_prefix"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-tax_trim_prefix}{}}}
\subsection{Method \code{tax_trim_prefix()}}{
The function can remove a fixed-length prefix from taxonomic information, such as p__Firmicutes -> Firmicutes.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$tax_trim_prefix(index, position)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{index}}{(integer or character) Which columns contain the classification information to be repaired,
for example: index = 3, index = c(2:8), index = c("domain", "phylum", "class", "order", "family", "genus", "species").}

\item{\code{position}}{(integer) The length of the prefix.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_trim_prefix(index = c(2:8), position = 3)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-tax_names_repair"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-tax_names_repair}{}}}
\subsection{Method \code{tax_names_repair()}}{
In taxonomic information, terms such as \"unclassified\", \"unknown\", \"uncultured\",
\"norank\", \"unidentified\", \"Unknown_Species\", \"Unknown_Genus\", \"Unknown_Family\",
\"Unknown_Order\", \"Unknown_Class\", and \"Unknown_Phylum\" may exist.
When plotting a species composition chart, simply merging these categories may result in the loss of some taxonomic information.


For instance, one entry may be categorized as Firmicutes at the phylum level and as
\"uncultured\" at the genus level, while another entry may be categorized as Armatimonadetes at
the phylum level and also as \"uncultured\" at the genus level. Merging them at
the genus level would result in both entries being classified as \"uncultured\",
leading to the loss of some taxonomic information. The correct approach is to refine
and repair the taxonomic information. In this case, the entries at the genus level should be
specified as \"uncultured_Firmicutes\" and \"uncultured_Armatimonadetes\", respectively,
to preserve the detailed taxonomic information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$tax_names_repair(column_to_check, column_to_add)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{column_to_check}}{(integer or character) The columns to be repaired, such as column_to_check = 8, column_to_check = c(4:8),
If column names are known, you can also input column_to_check = "column_name"}

\item{\code{column_to_add}}{(integer or character) If column_to_check is unclassified, append the column number as a suffix.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = 7, column_to_add = 3)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c(4:8), column_to_add = 3)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = "genus", column_to_add = "phylum")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c("genus", "species"), column_to_add = "phylum")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$tax_names_repair(column_to_check = c("genus", "species"), column_to_add = 3)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-align_otu_tax"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-align_otu_tax}{}}}
\subsection{Method \code{align_otu_tax()}}{
When using the rarefaction method of the phyloseq package with the parameter
trimOTUs = TRUE, some OTUs in the OTU table will be removed. In this case,
the number of rows in the OTU table and the TAX table will not be consistent.
The align_otu_tax() function can be used to align these two tables.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$align_otu_tax(by.x = 1, by.y = 1, all.x = F, all.y = F, sort = F)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{by.x}}{(integer or character) Used to specify the column name in the tax data frame,
defaulting to 1, indicating the column name of the first column. Alternatively,
you can directly enter the column name, such as by.x = "OTU ID".}

\item{\code{by.y}}{(integer or character) Used to specify the column name in the otu data frame,
defaulting to 1, indicating the column name of the first column. Alternatively,
you can directly enter the column name, such as by.x = "OTU ID".}

\item{\code{all.x}}{(logical) Should all rows of the tax data frame be retained? Default is FALSE.}

\item{\code{all.y}}{(logical) Should all rows of the otu data frame be retained? Default is FALSE.}

\item{\code{sort}}{(logical) Should reordering be done? Default is no.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$align_otu_tax(by.x = 1, by.y = 1, all.x = F, all.y = T, sort = F)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-data_rarefy"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-data_rarefy}{}}}
\subsection{Method \code{data_rarefy()}}{
Use the "rrarefy" function from the "vegan" package or the "rarefy_even_depth" function from the "phyloseq" package for data rarefaction.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$data_rarefy(
  id_col = 0,
  method = "vegan",
  seed = 123,
  replace = F,
  trimOTUs = T,
  tax_table = NULL,
  write_file = TRUE,
  file_name = "table"
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The OTU_ID column is in which column, defaulting to 0 means there is no OTU_ID column, and the data is already numeric.}

\item{\code{method}}{(character) The data rarefaction can be performed using the "vegan" package or the "phyloseq" package.}

\item{\code{seed}}{(integer) (Only applicable when using the "phyloseq" package for data rarefaction) Random seed.}

\item{\code{replace}}{(logical) Whether to sample with replacement (TRUE) or without replacement (FALSE).
(1) Sampling with replacement is faster and more memory-efficient;
(2) Sampling with replacement means that the read counts for some OTUs could
be greater than the original count values.}

\item{\code{trimOTUs}}{(logical) (Only applicable when using the "phyloseq" package for data rarefaction) Whether to remove OTUs with zero counts for each sample.}

\item{\code{tax_table}}{(tax table)}

\item{\code{write_file}}{(logical) Whether to save the rarefied file.}

\item{\code{file_name}}{(character) Customize the saved file name.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy()}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 0, method = "vegan")}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 0, method = "phyloseq", seed = 1231)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$data_rarefy(id_col = 1, method = "phyloseq", trimOTUs = T,
tax_table = tax, write_file = T)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-alpha"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-alpha}{}}}
\subsection{Method \code{alpha()}}{
Alpha diversity analysis includes the calculation of Shannon, Simpson, Chao1,
Ace, Pielou, Goods_coverage, and PD indices. It supports significance
analysis using one-way ANOVA and multiple comparison methods.
The significance marking method uses the letter marking method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$alpha(
  id_col = 1,
  group = "group",
  parallel_method = "mean",
  method = 1
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}

\item{\code{parallel_method}}{(character) Sample processing methods for the same group:
average, sum, median, none.}

\item{\code{method}}{Multiple comparison methods, please enter a number from 1 to 7
to choose:

"1" = "Tukey-HSD test",

"2" = "Fisher-LSD test",

"3" = "Student-Newman-Keuls test",

"4" = "Duncan test",

"5" = "Scheffe test",

"6" = "Waller-Duncan test",

"7" = "REGW test".}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$alpha(id_col = 1, group = "group", parallel_method = "mean",
tree = tree, method = 1)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-alpha_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-alpha_plot}{}}}
\subsection{Method \code{alpha_plot()}}{
After processing with the \code{alpha()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$alpha_plot(
  color_scheme = NULL,
  custom_order = NULL,
  size_point = 5,
  size_differ = 14,
  errorbar_width = 0.15,
  errorbar_linewidth = 0.8,
  title = NULL,
  title_x = NULL,
  title_y = NULL,
  size_title = 40,
  size_title_x = 28,
  size_title_y = 28,
  size_x = 28,
  size_y = 28,
  filename = "alpha",
  file_width = 12,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{custom_order}}{(character) Custom legend order.}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_differ}}{(numeric) The size of significance marker letters.}

\item{\code{errorbar_width}}{(numeric) The width of the horizontal lines on the error bars.}

\item{\code{errorbar_linewidth}}{(numeric) The width of the vertical lines on the error bars.}

\item{\code{title}}{(character) The title of the chart.}

\item{\code{title_x}}{(character) The title of the X-axis.}

\item{\code{title_y}}{(character) The title of the Y-axis.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$alpha(id_col = 1, group = "group", parallel_method = "mean", tree = tree, method = 1)
a$alpha_plot(data,
color_scheme = c('#aaf200','#0082ff',"#d23aa4","#c777ff", "#79ff79"),
custom_order = c("A", "B", "R", "D", "S"))
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-RDA"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-RDA}{}}}
\subsection{Method \code{RDA()}}{
Redundancy Analysis (RDA) is a statistical method used to explore the
relationship between response variables and explanatory variables in
multivariate datasets. This function references the \code{rda()} function in the
\code{vegan} package for analysis. Prior to conducting RDA analysis, it is
recommended to perform Detrended Correspondence Analysis (DCA) detection
using the \code{decorana} function from the \code{vegan} package. Selection is based
on the Axis Lengths value of DCA1 as follows: (1) If >4.0, choose CCA;
(2) If between 3.0-4.0, both RDA and CCA are acceptable;
(3) If <3.0, choose RDA.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$RDA(id_col = 1, group = "group")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$RDA(1, "group")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-RDA_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-RDA_plot}{}}}
\subsection{Method \code{RDA_plot()}}{
After processing with the \code{RDA()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$RDA_plot(
  color_scheme = NULL,
  group = "group",
  custom_order = NULL,
  seed = 123,
  size_point = 4.5,
  size_point_legend = 8,
  spacing_legend_point = 1.2,
  spacing_legend_title = 0.5,
  legend_ncol = 1,
  title = "RDA",
  title_legend = "Group",
  size_title = 28,
  size_title_x = 20,
  size_title_y = 20,
  size_title_legned = 24,
  size_x = 18,
  size_y = 18,
  size_legned = 16,
  filename = "RDA",
  file_width = 16,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{group}}{(character) Grouping information.}

\item{\code{custom_order}}{Custom legend order.}

\item{\code{seed}}{Seed}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_point_legend}}{(numeric) The size of legend points.}

\item{\code{spacing_legend_point}}{(numeric) The internal padding of the legend.}

\item{\code{spacing_legend_title}}{(numeric) The spacing between the legend title and the body}

\item{\code{legend_ncol}}{(integer) Number of columns in the legend.}

\item{\code{title}}{(character) Main title.}

\item{\code{title_legend}}{(character) Legend title.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_title_legned}}{(numeric) Font size of legend title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{size_legned}}{(numeric) Font size of the legend.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$RDA(1, "group")
a$RDA_plot(group = "group", custom_order = NULL,
           color_scheme = c("#00b0f6", "#FFC24B", "#f8766d"), seed = 123,

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "RDA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 16, size_y = 16, size_legned = 16,

           filename = "RDA", file_width = 16, file_height = 9)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-CCA"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-CCA}{}}}
\subsection{Method \code{CCA()}}{
Canonical Correspondence Analysis (CCA) is a multivariate statistical method
used to study the relationship between two sets of variables. It can reveal
the inherent connections between the two sets of variables. This function
references the \code{cca()} function in the \code{vegan} package for analysis. Prior to
conducting RDA analysis, it is recommended to perform Detrended
Correspondence Analysis (DCA) detection using the \code{decorana} function from
the \code{vegan} package. Selection is based on the Axis Lengths value of DCA1 as
follows: (1) If >4.0, choose CCA; (2) If between 3.0-4.0, both RDA and CCA
are acceptable; (3) If <3.0, choose RDA.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$CCA(id_col = 1, group = "group")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer)The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$CCA(metadata, 1, "group")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-CCA_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-CCA_plot}{}}}
\subsection{Method \code{CCA_plot()}}{
After processing with the \code{CCA()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$CCA_plot(
  color_scheme = NULL,
  group = "group",
  custom_order = NULL,
  seed = 123,
  size_point = 4.5,
  size_point_legend = 8,
  spacing_legend_point = 1.2,
  spacing_legend_title = 0.5,
  legend_ncol = 1,
  title = "RDA",
  title_legend = "Group",
  size_title = 28,
  size_title_x = 20,
  size_title_y = 20,
  size_title_legned = 24,
  size_x = 18,
  size_y = 18,
  size_legned = 16,
  filename = "RDA",
  file_width = 16,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{group}}{(character) Grouping information.}

\item{\code{custom_order}}{Custom legend order.}

\item{\code{seed}}{Seed}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_point_legend}}{(numeric) The size of legend points.}

\item{\code{spacing_legend_point}}{(numeric) The internal padding of the legend.}

\item{\code{spacing_legend_title}}{(numeric) The spacing between the legend title and the body}

\item{\code{legend_ncol}}{(integer) Number of columns in the legend.}

\item{\code{title}}{(character) Main title.}

\item{\code{title_legend}}{(character) Legend title.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_title_legned}}{(numeric) Font size of legend title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{size_legned}}{(numeric) Font size of the legend.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$CCA(id_col = 1, group = "group")
a$CCA_plot(group = "group", custom_order = NULL,
           color_scheme = c("#00b0f6", "#FFC24B", "#f8766d"), seed = 123,

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "CCA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 16, size_y = 16, size_legned = 16,

           filename = "CCA", file_width = 16, file_height = 9)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-chord"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-chord}{}}}
\subsection{Method \code{chord()}}{
Process the feature table into the necessary data format for drawing a chord
diagram.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$chord(
  id_col = 1,
  tax_cla = "genus",
  group = "group",
  parallel_method = "mean",
  row_n = 8,
  digits = 0
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The OTU_ID column is in which column,
defaulting to 0 means there is no OTU_ID column, and the data is already
numeric.}

\item{\code{tax_cla}}{(character) Taxonomic level. Only column names from the tax
table can be entered, for example tax_cla = 'genus'.}

\item{\code{group}}{(Required, character) Grouping information. please enter the column name of
the grouping information in the metadata table.}

\item{\code{parallel_method}}{(character) Sample processing methods for the same group:
average, sum, median, none.}

\item{\code{row_n}}{(integer) Preserve the top N taxa (including the Nth) based on
abundance, while merging taxa with lower abundance into "others".}

\item{\code{digits}}{(integer) When the parallel sample method is set to "mean," the
number of decimal places will default to 0.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$chord(id_col = 1, tax_cla = "genus", group = "group",
parallel_method = "mean", row_n = 8, digits = 0)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-chord_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-chord_plot}{}}}
\subsection{Method \code{chord_plot()}}{
After processing with the \code{chord()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$chord_plot(
  color_scheme = NULL,
  size_axis = 0.8,
  size_label = 1,
  label_height = 0.35,
  filename = "chord",
  file_width = 16,
  file_height = 10
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{size_axis}}{(numeric) Font size on the sector axis.}

\item{\code{size_label}}{(numeric) Font size of sector labels.}

\item{\code{label_height}}{(numeric) Track height of label text.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$chord(id_col = 1, tax_cla = "genus", group = "group",
parallel_method = "mean", row_n = 8, digits = 0)
a$chord_plot(color_scheme = c("#27e6ff", "#42ff0e", "#33BEB7", "#F66320",
"#FBA127", "#A463D7", "#DB3937", "#ffaec8", "#828282"))
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-heat_map"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-heat_map}{}}}
\subsection{Method \code{heat_map()}}{
To perform heatmap analysis, you will need three files:
\enumerate{
\item OTU table (containing abundance information);
\item Taxonomy table (containing species annotation information);
\item Metadata table (containing grouping information).
This function undergoes a series of processing steps,
such as clustering based on specified taxonomic levels using column numbers
or names from the tax table, to generate a dataframe directly usable for
pheatmap plotting. For quick plotting, you can use the built-in
\code{heat_map_plot()} function to generate high-quality plots efficiently.
}
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$heat_map(
  id_col = 1,
  tax_cla = "genus",
  group = "group",
  group2 = NULL,
  parallel_method = "mean",
  row_n = 35
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{tax_cla}}{(character) Taxonomic level. Only column names from the tax
table can be entered, for example tax_cla = 'genus'.}

\item{\code{group}}{(character) Group 1, please enter the column name or column
number of the grouping information in the metadata table.}

\item{\code{group2}}{(character) Group 2 for facetting plots, please enter the
column name or column number of the grouping information in the metadata
table.}

\item{\code{parallel_method}}{(character) Parallel sample processing method,
defaulting to mean. Options: mean (average), sum (summation),
median (median).}

\item{\code{row_n}}{(integer) Preserve the top N taxa (including the Nth) based on
abundance.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$heat_map(id_col = 1, group = "group", group2 = NULL, tax_cla = "genus",
parallel_method = "mean", row_n = 50)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-heat_map_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-heat_map_plot}{}}}
\subsection{Method \code{heat_map_plot()}}{
After performing heatmap analysis using the \code{heat_map()} function,
you will obtain a dataframe. This function allows you to visualize the
dataframe, thereby generating a high-quality heatmap.
If you want to customize the x-axis order of the heatmap, please input a
vector into the parameter cluster_cols. For example,
cluster_cols = c(4, 5, 6, 1, 2, 3), indicates sorting according to column
numbers 4 5 6 1 2 3.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$heat_map_plot(
  scale = "row",
  cellwidth = NA,
  cellheight = NA,
  color = c("#2196f3", "#a8d1f2", "#f4faff", "#ec9fa2", "#ec1c24"),
  cluster_cols = F,
  clustering_method = "ward.D",
  treeheight_row = 50,
  treeheight_col = 50,
  filename = "heatmap.png",
  file_width = 12,
  file_height = 12
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{scale}}{(character) scale is used to set normalization. "row" represents
row-wise normalization, "column" represents column-wise normalization, and
"none" represents no normalization.}

\item{\code{cellwidth}}{(numeric) Translation: Represents the width of a single
cell, default is "NA".}

\item{\code{cellheight}}{(numeric) Translation: Represents the height of a single
cell, default is "NA".}

\item{\code{color}}{(character) The heatmap cell colors are generated automatically
with a gradient.
For example: c("#2196f3", "#a8d1f2", "#f4faff", "#ec9fa2", "#ec1c24")}

\item{\code{cluster_cols}}{(logical or integer vector) Whether to enable column
clustering (when clustering is enabled,
custom sorting is not possible). If you want to customize the x-axis order of
the heatmap,
please input a vector into the parameter cluster_cols.
For example, cluster_cols = c(4, 5, 6, 1, 2, 3), indicates sorting according
to column numbers 4 5 6 1 2 3.}

\item{\code{clustering_method}}{(character) "Represents clustering methods,
including: 'ward.D', ward.D2', 'single', 'complete', 'average', 'mcquitty',
'median', 'centroid'"}

\item{\code{treeheight_row}}{(numeric) Row clustering tree height}

\item{\code{treeheight_col}}{(numeric) Col clustering tree height}

\item{\code{filename}}{(character) File name for saving}

\item{\code{file_width}}{(numeric) Image width}

\item{\code{file_height}}{(numeric) Image height}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$heat_map(id_col = 1, group = "group", group2 = NULL, tax_cla = "genus",
parallel_method = "mean", row_n = 50)
a$heat_map_plot(scale = "row", cellwidth = NA, cellheight = NA,
color =  c("#2196f3", "#a8d1f2", "#f4faff", "#ec9fa2", "#ec1c24"),
cluster_cols = F, clustering_method = "ward.D", treeheight_row = 100,
treeheight_col = 50, filename = "heatmap.png")}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-pca"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-pca}{}}}
\subsection{Method \code{pca()}}{
In bioinformatics analysis, Principal Component Analysis (PCA) is a commonly
used statistical technique for exploring and visualizing patterns and
structures within high-dimensional datasets. The "pca()" function utilizes
the built-in R function "stats::prcomp()" to analyze and calculate the
explanatory power of each principal component.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$pca(id_col = 1, group = "group")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The OTU_ID column is in which column,
defaulting to 0 means there is no OTU_ID column, and the data is already
numeric.}

\item{\code{group}}{(Required, character) Grouping information. please enter the column name of
the grouping information in the metadata table.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pca(1, metadata)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-pca_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-pca_plot}{}}}
\subsection{Method \code{pca_plot()}}{
After processing with the \code{pca()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$pca_plot(
  color_scheme = NULL,
  custom_order = NULL,
  seed = 123,
  size_point = 4.5,
  size_point_legend = 8,
  spacing_legend_point = 1.2,
  spacing_legend_title = 0.5,
  legend_ncol = 1,
  label_is = T,
  size_label = 5,
  title = "PCA",
  title_sub = NULL,
  title_legend = "Group",
  size_title = 28,
  size_title_sub = 16,
  size_title_x = 20,
  size_title_y = 20,
  size_title_legned = 24,
  size_x = 18,
  size_y = 18,
  size_legned = 16,
  filename = "PCA",
  file_width = 12,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{custom_order}}{(character) Custom legend order.}

\item{\code{seed}}{Seed}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_point_legend}}{(numeric) The size of legend points.}

\item{\code{spacing_legend_point}}{(numeric) The internal padding of the legend.}

\item{\code{spacing_legend_title}}{(numeric) The spacing between the legend title and the body}

\item{\code{legend_ncol}}{(integer) Number of columns in the legend.}

\item{\code{label_is}}{(logical) Whether to display data labels.}

\item{\code{size_label}}{(numeric) Font size of the data label.}

\item{\code{title}}{(character) Main title.}

\item{\code{title_sub}}{(character) Subtitle.}

\item{\code{title_legend}}{(character) Legend title.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_sub}}{(numeric) Font size of the subtitle.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_title_legned}}{(numeric) Font size of legend title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{size_legned}}{(numeric) Font size of the legend.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pca(1, metadata)
a$pca_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
           seed = 123, custom_order = c("A", "B", "R", "D", "S"),

           size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
           spacing_legend_title = 0.5, legend_ncol = 1,

           title = "PCA", title_legend = "Group",

           size_title = 28, size_title_x = 20, size_title_y = 20,
           size_title_legned = 24,

           size_x = 18, size_y = 18, size_legned = 16, filename = "PCA",
           file_width = 12, file_height = 9)
}


}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-pcoa"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-pcoa}{}}}
\subsection{Method \code{pcoa()}}{
Principal Coordinates Analysis(PCoA) is a visualization method for studying
data similarities or dissimilarities, enabling the observation of differences
between individuals or groups. The "pcoa()" function calculates the
Bray-Curtis distance using "vegan::vegdist()", then performs PCoA using the
built-in R function "stats::cmdscale()", etaining the eigenvalues.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$pcoa(id_col = 1, group = "group")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The OTU_ID column is in which column,
defaulting to 0 means there is no OTU_ID column, and the data is already
numeric.}

\item{\code{group}}{(Required, character) Grouping information. please enter the column name of
the grouping information in the metadata table.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pcoa(1, metadata)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-pcoa_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-pcoa_plot}{}}}
\subsection{Method \code{pcoa_plot()}}{
After processing with the \code{pcoa()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$pcoa_plot(
  color_scheme = NULL,
  custom_order = NULL,
  seed = 123,
  size_point = 4.5,
  size_point_legend = 8,
  spacing_legend_point = 1.2,
  spacing_legend_title = 0.5,
  legend_ncol = 1,
  label_is = T,
  size_label = 5,
  title = "PCoA",
  title_sub = NULL,
  title_legend = "Group",
  size_title = 28,
  size_title_sub = 16,
  size_title_x = 20,
  size_title_y = 20,
  size_title_legned = 24,
  size_x = 18,
  size_y = 18,
  size_legned = 16,
  filename = "PCoA",
  file_width = 12,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{custom_order}}{Custom legend order.}

\item{\code{seed}}{Seed}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_point_legend}}{(numeric) The size of legend points.}

\item{\code{spacing_legend_point}}{(numeric) The internal padding of the legend.}

\item{\code{spacing_legend_title}}{(numeric) The spacing between the legend title and the body}

\item{\code{legend_ncol}}{(integer) Number of columns in the legend.}

\item{\code{label_is}}{(logical) Whether to display data labels.}

\item{\code{size_label}}{(numeric) Font size of the data label.}

\item{\code{title}}{(character) Main title.}

\item{\code{title_sub}}{(character) Subtitle.}

\item{\code{title_legend}}{(character) Legend title.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_sub}}{(numeric) Font size of the subtitle.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_title_legned}}{(numeric) Font size of legend title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{size_legned}}{(numeric) Font size of the legend.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$pcoa(id_col = 1, group = "group2")
a$pcoa_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
            seed = 123, custom_order = c("A", "B", "R", "D", "S"),

            size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
            spacing_legend_title = 0.5, legend_ncol = 1,

            title = "PCoA", title_legend = "Group",

            size_title = 28, size_title_x = 20, size_title_y = 20,
            size_title_legned = 24,

            size_x = 18, size_y = 18, size_legned = 16, filename = "PCoA",
            file_width = 12, file_height = 9)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-nmds"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-nmds}{}}}
\subsection{Method \code{nmds()}}{
In bioinformatics analysis, Non-Metric Multidimensional Scaling (NMDS) is
used to reduce the dimensionality of high-dimensional data and represent the
similarity or dissimilarity between samples in a lower-dimensional space.
The "nmds()" function utilizes "vegan::vegdist" to calculate the Bray-Curtis
distance and employs "vegan::metaMDS" for conducting NMDS ordination analysis.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$nmds(id_col = 1, group = "group")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The OTU_ID column is in which column, defaulting to 0
means there is no OTU_ID column, and the data is already numeric.}

\item{\code{group}}{(Required, character) Grouping information. please enter the
column name of the grouping information in the metadata table.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$nmds(1, "group2")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-nmds_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-nmds_plot}{}}}
\subsection{Method \code{nmds_plot()}}{
After processing with the \code{nmds()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$nmds_plot(
  color_scheme = NULL,
  custom_order = NULL,
  seed = 123,
  size_point = 4.5,
  size_point_legend = 8,
  spacing_legend_point = 1.2,
  spacing_legend_title = 0.5,
  legend_ncol = 1,
  label_is = T,
  size_label = 5,
  title = "NMDS",
  title_sub = NULL,
  title_legend = "Group",
  size_title = 28,
  size_title_sub = 16,
  size_title_x = 20,
  size_title_y = 20,
  size_title_legned = 24,
  size_x = 18,
  size_y = 18,
  size_legned = 16,
  filename = "NMDS",
  file_width = 12,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{custom_order}}{Custom legend order.}

\item{\code{seed}}{Seed}

\item{\code{size_point}}{(numeric) The size of points.}

\item{\code{size_point_legend}}{(numeric) The size of legend points.}

\item{\code{spacing_legend_point}}{(numeric) The internal padding of the legend.}

\item{\code{spacing_legend_title}}{(numeric) The spacing between the legend title and the body}

\item{\code{legend_ncol}}{(integer) Number of columns in the legend.}

\item{\code{label_is}}{(logical) Whether to display data labels.}

\item{\code{size_label}}{(numeric) Font size of the data label.}

\item{\code{title}}{(character) Main title.}

\item{\code{title_sub}}{(character) Subtitle.}

\item{\code{title_legend}}{(character) Legend title.}

\item{\code{size_title}}{(numeric) Font size of the main title.}

\item{\code{size_title_sub}}{(numeric) Font size of the subtitle.}

\item{\code{size_title_x}}{(numeric) Font size of the horizontal axis title.}

\item{\code{size_title_y}}{(numeric) Font size of the vertical axis title.}

\item{\code{size_title_legned}}{(numeric) Font size of legend title.}

\item{\code{size_x}}{(numeric) Font size of the horizontal axis tick labels.}

\item{\code{size_y}}{(numeric) Font size of the vertical axis tick labels.}

\item{\code{size_legned}}{(numeric) Font size of the legend.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$nmds(1, "group2")
a$nmds_plot(color_scheme = c("#00b0f6", "#FFC24B", "#f8766d", "#ae876d", "#AFC24B"),
            seed = 123, custom_order = c("A", "B", "R", "D", "S"),

            size_point = 8, size_point_legend = 8, spacing_legend_point = 1.2,
            spacing_legend_title = 0.5, legend_ncol = 1,

            title = "NMDS", title_legend = "Group",

            size_title = 28, size_title_x = 20, size_title_y = 20,
            size_title_legned = 24,

            size_x = 18, size_y = 18, size_legned = 16, filename = "NMDS",
            file_width = 12, file_height = 9)
            }

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-venn"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-venn}{}}}
\subsection{Method \code{venn()}}{
When the number of samples is less than 5, a Venn diagram can effectively
display the intersections of OTUs among the samples. Although the \code{venn()}
function allows the \code{metadata} parameter to be NULL, we still recommend using
the \code{group} column in the metadata file to control the grouping information.

It is important to note that when the number of samples is 5 or more, we
recommend using a \code{upset} diagram to represent the intersections of OTUs.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$venn(id_col = 1, group = "group", parallel_method = "mean")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}

\item{\code{parallel_method}}{(character) Sample processing methods for the same group:
average, sum, median, none.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$venn(1, "group", "mean")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-venn_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-venn_plot}{}}}
\subsection{Method \code{venn_plot()}}{
After processing with the \code{venn()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$venn_plot(
  color_scheme = NULL,
  show_percentage = T,
  digits = 2,
  size_set_name = 12,
  size_text = 7,
  filename = NULL,
  file_width = 12,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_scheme}}{(character) Color scheme.}

\item{\code{show_percentage}}{(logical) Whether to display the percentage of each
set.}

\item{\code{digits}}{(numeric) Number of decimal places to retain for percentages.}

\item{\code{size_set_name}}{(numeric) Title size of each dataset.}

\item{\code{size_text}}{(numeric) Font size of the text within the dataset.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$venn(1, "group", "mean")
a$venn_plot(color_scheme = c('#aaf200','#0082ff',"#d23aa4","#c777ff", "#79ff79"))
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-Upset"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-Upset}{}}}
\subsection{Method \code{Upset()}}{
When the number of samples is greater than or equal to 5, the set diagram can
more effectively display the intersection information of OTUs among the
samples. Although the \code{Upset()} function allows the \code{metadata} parameter to
be NULL, we still recommend using the \code{group} column in the metadata file to
control the grouping information.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$Upset(id_col = 1, group = "group", parallel_method = "mean")}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}

\item{\code{parallel_method}}{(character) Sample processing methods for the same group:
average, sum, median, none.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$Upset(1, "group", "mean")
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-Upset_plot"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-Upset_plot}{}}}
\subsection{Method \code{Upset_plot()}}{
After processing with the \code{Upset()} function, you can use this function
for visualization.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$Upset_plot(
  color_matrix = NULL,
  n = 40,
  custom_order = NULL,
  order_by = "freq",
  mb.ratio = c(0.6, 0.4),
  size_point = 2,
  color_point = "#505050",
  color_matrix_shade = "#f89c9f",
  color_bar = "#505050",
  title_matrix_x = "Set Size",
  title_bar_y = "Intersection Size",
  size_title_matrix_x = 2,
  size_title_matrix_y = 1.7,
  size_title_bar_y = 2,
  size_matrix_x = 2,
  size_bar_y = 2,
  size_bar_label = 1.75,
  queries = NULL,
  filename = "Upset",
  file_width = 16,
  file_height = 9
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{color_matrix}}{(character) Color scheme of the bar chart in the matrix
plot.}

\item{\code{n}}{(integer) Number of bars displayed in the bar chart.}

\item{\code{custom_order}}{(character) Order of the x-axis in the bar chart.}

\item{\code{order_by}}{(character) Sorting order of the matrix plot, options are
"freq" or "degree".}

\item{\code{mb.ratio}}{(character) The proportion of the heights between the bar
plot and the matrix plot.}

\item{\code{size_point}}{(numeric) The size of the points in the matrix plot.}

\item{\code{color_point}}{(character) The color of the points in the matrix plot.}

\item{\code{color_matrix_shade}}{(character) The color of the shaded areas in the
matrix plot.}

\item{\code{color_bar}}{(character) The color of the bars in the y-axis bar plot.}

\item{\code{title_matrix_x}}{(character) The labels on the x-axis of the matrix plot.}

\item{\code{title_bar_y}}{(character) The title of the Y-axis in the bar plot.}

\item{\code{size_title_matrix_x}}{(numeric) The font size of the x-axis title in the
matrix plot.}

\item{\code{size_title_matrix_y}}{(numeric) The font size of the y-axis title in the
matrix plot.}

\item{\code{size_title_bar_y}}{(numeric) The font size of the vertical axis title in
the bar plot.}

\item{\code{size_matrix_x}}{(numeric) The size of the tick labels in the matrix plot.}

\item{\code{size_bar_y}}{(numeric) The font size of the characters on the vertical
axis scale of the bar plot.}

\item{\code{size_bar_label}}{(numeric) The size of the numbers on the bars in the
bar plot.}

\item{\code{queries}}{(a list) Highlight specific elements in the matrix plot or the
bar plot.}

\item{\code{filename}}{(character) File name for saving.}

\item{\code{file_width}}{(numeric) Width of the image.}

\item{\code{file_height}}{(numeric) Height of the image.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
upset1 <- Upset(otu, metadata, 1, "group", "mean")
Upset_plot(upset1,
           queries = list(
             list(query = intersects,
                  params = list("AA", "AB", "AD"), color="#f06676", active = T),
             list(query = intersects,
                  params = list("AA", "AB"), color="#f06676", active = T)))
}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$Upset(1, "group", "mean")
a$Upset_plot(
  color_matrix = NULL, n = 40, custom_order = NULL, order_by = "freq",
  mb.ratio = c(0.6, 0.4),
  size_point = 2, color_point = "#505050", color_matrix_shade = "#f89c9f",
  color_bar = '#505050',
  title_matrix_x = "Set Size", title_bar_y = "Intersection Size",
  size_title_matrix_x = 2, size_title_matrix_y = 1.7, size_title_bar_y = 2,
  size_matrix_x = 2, size_bar_y = 2, size_bar_label = 1.75)
}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-network"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-network}{}}}
\subsection{Method \code{network()}}{
The feature table, taxonomy table, and metadata file will be processed into
an edge file and a node file. These two files can be imported into Gephi for
visualization (which we also recommend). Additionally, the network() function
has built-in visualization methods, but they are performance-intensive and
may run slower.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$network(
  id_col = 1,
  tax_cla = "genus",
  label = "phylum",
  group = "group",
  parallel_method = "mean",
  calc_method = "spearman",
  cluster_method = 1,
  normalize_flag = TRUE,
  .r = 0.6,
  .p = 0.05
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{id_col}}{(integer) The column number of the OTU ID column in the
OTU table, by default, is 1.}

\item{\code{tax_cla}}{(character) Taxonomic level. Only column names from the tax
table can be entered, for example tax_cla = 'genus'.}

\item{\code{label}}{(character) The "label" column in the node file generally comes
from a column name in the taxonomy file, with the default being "phylum".}

\item{\code{group}}{(character) Group 1, please enter the column name of
the grouping information in the metadata table.}

\item{\code{parallel_method}}{(character) Sample processing methods for the same group:
average, sum, median, none.}

\item{\code{calc_method}}{(character) Correlation analysis methods available:
"spearman" or "pearson". The default method is "Spearman".}

\item{\code{cluster_method}}{(integer) Clustering method, options range from 1 to 11, with the
default being 1 (Louvain method).

A list of all methods:

"1" = "Louvain (default)",

"2" = "Edge Betweenness",

"3" = "Fluid Communities",

"4" = "Infomap",

"5" = "Label Propagation",

"6" = "Leading Eigen",

"7" = "Leiden",

"8" = "Optimal",

"9" = "Spinglass",

"10" = "Walktrap",

"11" = "Fast Greedy")}

\item{\code{normalize_flag}}{(logical) Standardize the columns "eigenvector", "closeness",
"constraint", and "pagerank" in the node file. Default is TRUE.}

\item{\code{.r}}{(numeric) Correlation. Default is 0.6, meaning nodes with an
r-value > 0.6 will be retained.}

\item{\code{.p}}{(numeric) Significance test p-value. Default is 0.05, meaning nodes with
p-values less than 0.05 will be retained.}
}
\if{html}{\out{</div>}}
}
\subsection{Examples}{
\if{html}{\out{<div class="r example copy">}}
\preformatted{\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network()}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network(id_col = 1, .r = 0.6, .p = 0.05)}
\dontrun{
a = amplysis$new(otu, tax, rep, tree, env, metadata)
a$network(id_col = 1, tax_cla = "genus", label = "phylum",
          group = "group", parallel_method = "mean", calc_method = "spearman",
          cluster_method = 1, normalize_flag = TRUE, .r = 0.6, .p = 0.05)}

}
\if{html}{\out{</div>}}

}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-amplysis-clone"></a>}}
\if{latex}{\out{\hypertarget{method-amplysis-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{amplysis$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
